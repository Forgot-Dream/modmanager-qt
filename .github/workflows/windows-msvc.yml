name: Windows MSVC
on:
  push:
    paths:
      - '*.pro'
      - 'src/**'
      - '.github/workflows/windows-msvc.yml'
  pull_request:
    paths:
      - '*.pro'
      - 'src/**'
      - '.github/workflows/windows-msvc.yml'
jobs:
  build:
    name: Build
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - qt_ver: 5.15.2
            qt_arch: win32_msvc2019
            msvc_arch: x86
            qt_arch_install: msvc2019
            openssl_url: "http://wiki.overbyte.eu/arch/openssl-1.1.1l-win32.zip"
          - qt_ver: 5.15.2
            qt_arch: win64_msvc2019_64
            msvc_arch: x64
            qt_arch_install: msvc2019_64
            openssl_url: "http://wiki.overbyte.eu/arch/openssl-1.1.1l-win64.zip"
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.13.0
        with:
          version: ${{ matrix.qt_ver }}
          arch: ${{ matrix.qt_arch }}
          tools: ${{ matrix.qt_tools }}
          cached: 'false'
          modules: qtwebengine
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Install zlib 32
        if: contains(matrix.qt_arch, 'win32_msvc')
        shell: pwsh
        run: |
            set ARCH=Win32
            Invoke-WebRequest -Uri https://git.io/JnHTY -OutFile install_zlib.bat
            ./install_zlib.bat
            del install_zlib.bat
      - name: Install zlib
        if: contains(matrix.qt_arch, 'win64_msvc')
        shell: pwsh
        run: |
          Invoke-WebRequest -Uri https://git.io/JnHTY -OutFile install_zlib.bat
          ./install_zlib.bat
          del install_zlib.bat
      - name: Test zlib
        shell: cmd
        run: |
          if NOT exist "%PROGRAMFILES%"\zlib\lib\zlib.lib exit 1
          if NOT exist "%PROGRAMFILES%"\zlib\bin\zlib.dll exit 1
          if NOT exist "%PROGRAMFILES%"\zlib\include\zconf.h exit 1
          if NOT exist "%PROGRAMFILES%"\zlib\include\zlib.h exit 1
          if NOT exist "%PROGRAMFILES%"\zlib\lib\zlib.lib exit 1
      - name: msvc-build
        id: build
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{ matrix.msvc_arch }}
          qmake
          nmake
          echo winSdkDir=%WindowsSdkDir% >> %GITHUB_ENV%
          echo winSdkVer=%WindowsSdkVersion% >> %GITHUB_ENV%
          echo vcToolsInstallDir=%VCToolsInstallDir% >> %GITHUB_ENV%
          echo vcToolsRedistDir=%VCToolsRedistDir% >> %GITHUB_ENV%
      - name: perpare package
        shell: pwsh
        run: |
          mkdir deploy && mv release/${{github.event.repository.name}}.exe deploy
          $client = new-object System.Net.WebClient
          $client.DownloadFile('${{ matrix.openssl_url }}', 'openssl-bin.zip')
          Expand-Archive -Path openssl-bin.zip -DestinationPath openssl
          cp openssl/*.dll deploy/
          cp LICENSE* deploy/
          cp *md deploy/
      - name: copy zlib 32
        if: contains(matrix.qt_arch, 'win32_msvc')
        shell: pwsh
        run: |
          cp "C:/Program Files (x86)/zlib/bin/zlib.dll" deploy/
      - name: copy zlib
        if: contains(matrix.qt_arch, 'win64_msvc')
        shell: pwsh
        run: |
          cp "C:/Program Files/zlib/bin/zlib.dll deploy/
      - name: package
        id: package
        shell: pwsh
        run: |
          windeployqt.exe --no-translations --no-opengl-sw --no-system-d3d-compiler --no-angle --no-quick-import --qmldir "${{ env.Qt5_DIR }}/qml" deploy/${{github.event.repository.name}}.exe
      - uses: actions/upload-artifact@v2
        with:
          name: ${{github.event.repository.name}}-${{ matrix.qt_arch }}
          path: ${{github.workspace}}/deploy/
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{github.event.repository.name}}-${{ matrix.qt_arch }}.zip
          asset_name: ${{github.workspace}}/deploy/${{github.event.repository.name}}-${{ matrix.qt_arch }}.zip
          tag: ${{ github.ref }}
          overwrite: true
